## https://expressjs.com/en/starter/generator.html

# install Express.js
npm install express-generator -g

# use Express to make a project
# express --view=pug project_name
express --view=pug myapp

# at this point the project isn't quite setup yet. the node.js project has a list of dependencies it needs to download and install into the local folder.
npm install

# at this point, the project should be able to run with: (defaults to port 3000)
npm start



#
#
Right, now, there are different "renderers" that node.js use to draw html. This project is setup to use pug.
Pug is a language that we use instead of html.. sortof. (Make a note, that pug used to be called Jade. Sometimes when you google for answers, you need to google for Jade instead)
Things we care about (briefly):

1. - Public Folder
the public folder contains files that can be accessed by URLS.
URL/filename will display the file. Eg:
http://localhost:3000/stylesheets/style.css will show the file  project/public/stylesheets/style.css


Now, if you want to practice basic HTML. You can put basic HTML files into the public folder. EG:
put the file /public/practicewebsite.html
then the URL/practicewebsite.html will display that html file.
That's great, but we also use this to display images and other .css files.

2. - Views Folder
This folder has .pug files. When run, those files output HTML and CSS. The output is used by the Routes files to give the data to the clients.

3. - Routes Folder
ok, this is where we make routes. A Route, in this context, is "What do we do, when we get a HTTP Request?"

4. - App.js
This is the main setup file. This is the fist file that is run when you run 'npm start'.
It is used to setup routes, setup 3rd party libraries, and other setup/config stuff that you'll get to later.

#
#
#

ok, so, The first thing I want you to look at, is routes/index.js. Particularly, this function:

>   /* GET home page. */
>   router.get('/', function(req, res, next) {
>       res.render('index', { title: 'Express' });
>   });

there are a couple of HTTP request types. (Get, Post, Put.... ) (https://www.tutorialspoint.com/http/http_methods.htm)
Make a note that the .get function takes 2 parameters. A String, and a Function. it does this:

"Call the Function, when we get a HTTP GET request on the url '/'".
so, localhost:3000/ on a website, by default, will do a GET request on that.
localhost:3000/users will do a GET request on the url "/users".

Now, you can't just add another function and expect it to be called.
>   /* GET home page. */
>   router.get('/users', function(req, res, next) {
>       ....
>   });

Because it needs to be setup in the app.js file also.

>    var app = express();
>    var indexRouter = require('./routes/index');
>    var usersRouter = require('./routes/users');
>    app.use('/', indexRouter);
>    app.use('/users', usersRouter);

Now have a look specifically at routes/index.js. The function calls

>   res.render('index', { title: 'Express' });

the render function runs the render file. Now, again, we're using PUG. So, render('index'), runs the views/index.pug file.
